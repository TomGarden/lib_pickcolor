/*
上传到公共组件库  https://github.com/TomGarden/TomAndroidLibs
而不是上传到本代码所在的代码仓库

要想手动发布就去执行 bintrayUpload.sh
Github Actions 工作流暂未完成
* */

ext {
    moduleVersionCode = 6
    moduleVersionName = '0.1.6'
    moduleName = 'lib_pick_color'

    mavenGroupId = 'io.github.tomgarden'
}

task androidSourcesJar(type: Jar) {
    /*生成 sources.jar 应对生成的 aar 跳转代码无法阅读的问题*/
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}



publishing {

    publications {
        gpr(MavenPublication) {
            groupId mavenGroupId
            artifactId moduleName
            version moduleVersionName
            artifact("$buildDir/outputs/aar/$moduleName-release.aar")
            // 将 generateSourcesJar Task 生成的 sources.jar 也一并上传
            artifact(androidSourcesJar)
//            artifact(generateJavadoc)

            pom {
                name = moduleName
                description = "Android pick color lib"
                url = 'https://maven.pkg.github.com/TomGarden/lib_pickcolor'

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'TomGarden'
                        name = 'Tom'
                        email = '01wukong10@gmail.com'
                    }
                }

                scm {
                    connection = 'https://github.com/TomGarden/lib_pickcolor'
                    developerConnection = 'https://github.com/TomGarden/lib_pickcolor'
                    url = 'https://github.com/TomGarden/lib_pickcolor'
                }
            }
        }
    }

    repositories {
        //上传到 maven center
        maven {
            name = moduleName
            url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = System.getenv("MAVEN_USERNAME")
                password = System.getenv("MAVEN_PASSWORD")
            }
        }
    }
}

// 配置 GPG 签名
signing {

    def securityKeyPath = System.getenv("GPG_FOR_MAVEN_PUBLISH__privateKeyFile")
    def securityKeyFile = new File(securityKeyPath)
    useInMemoryPgpKeys(
            System.getenv("GPG_FOR_MAVEN_PUBLISH__keyId"),
            securityKeyFile.text,
            System.getenv("GPG_FOR_MAVEN_PUBLISH__password")
    )

    sign publishing.publications.gpr /* 与 gpr(MavenPublication) 对应 */
}


//这个代码块是权宜之计 ; 并非所有情况下都需要做这个代码块 , 如果本身可以打出需要的包名的包 , 此处即可注释
android {
    buildTypes {
        archivesBaseName = moduleName
    }
}

task testTask {
    //测试 gradle 语法
//    println(System.getenv("MAVEN_USERNAME"))
//    println(System.getenv("MAVEN_PASSWORD"))
//    println("$buildDir/outputs/aar/LibLog-release.aar")
    println()
}

//在 project 执行命令, 即可完成上传
//分步执行
//../gradlew clean
//../gradlew build
//../gradlew publish

//../gradlew publishToMavenLocal  // 到这里查看你生成的文件 /Users/tom/.m2/repository
//一次执行所有
//./gradlew clean build publish
//./gradlew clean build publishToMavenLocal
//仅针对 LibLog 执行相关命令
//./gradlew :LibLog:clean :LibLog:build :LibLog:publish